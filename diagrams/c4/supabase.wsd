@startuml
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml
!define DEVICONS https://raw.githubusercontent.com/tupadr3/plantuml-icon-font-sprites/master/devicons

set separator none
title Supabase - Containers

top to bottom direction

LAYOUT_LANDSCAPE()
' LAYOUT_LEFT_RIGHT()

System(SupabaseClientLibraries, "Supabase Client Libraries", $descr="", $tags="", $link="https://supabase.com/docs/reference#client-libraries")
System(SupabaseCLI, "Supabase CLI", $descr="", $tags="", $link="https://supabase.com/docs/reference/cli/about")
System(SupabaseStudio, "Supabase Studio", $descr="", $tags="", $link="")
System(S3StorageProvider, "S3 Storage Provider", $descr="", $tags="", $link="")

System_Boundary("Supabase_boundary", "Supabase", $tags="") {
  Container(Supabase.Kong, "Kong", $techn="", $descr="API Gateway", $tags="", $link="https://konghq.com/kong")
  Container(Supabase.GoTrue, "GoTrue", $techn="Go", $descr="An SWT based API for managing users and issuing SWT tokens", $tags="", $link="https://github.com/netlify/gotrue")
  Container(Supabase.PostgREST, "PostgREST", $techn="Haskell", $descr="turns the PostgreSQL database directly into a RESTful API.", $tags="", $link="https://postgrest.org/en/stable/")
  Container(Supabase.Realtime, "Realtime", $techn="Elixir", $descr="Listen to your to PostgreSQL database in realtime via websockets.", $tags="", $link="https://github.com/supabase/realtime,")
  Container(Supabase.StorageAPI, "Storage API", $techn="TypeScript", $descr="S3 compatible object storage service with Postgres and GoTrue", $tags="", $link="https://github.com/supabase/storage-api,")
  ContainerDb(Supabase.Postgres, "Postgres", $techn="C", $descr="Database management system as main part of supabase", $tags="", $link="https://github.com/supabase/postgres")
  Container(Supabase.PostgresMeta, "Postgres-Meta", $techn="", $descr="providing a RESTful API to managing all metadata of PostgreSQL databases", $tags="", $link="https://github.com/supabase/postgres-meta")
}

Rel(SupabaseClientLibraries, Supabase.Kong, "https", $techn="", $tags="", $link="")
Rel(SupabaseStudio, Supabase.Kong, "https", $techn="", $tags="", $link="")
Rel(SupabaseCLI, Supabase.Kong, "https", $techn="", $tags="", $link="")
Rel(Supabase.Kong, Supabase.GoTrue, "/auth", $techn="", $tags="", $link="")
Rel(Supabase.Kong, Supabase.PostgREST, "/rest", $techn="", $tags="", $link="")
Rel(Supabase.Kong, Supabase.Realtime, "/realtime", $techn="", $tags="", $link="")
Rel(Supabase.Kong, Supabase.StorageAPI, "/storage", $techn="", $tags="", $link="")
Rel(Supabase.Kong, Supabase.PostgresMeta, "/pg", $techn="", $tags="", $link="")
Rel(Supabase.GoTrue, Supabase.Postgres, "", $techn="", $tags="", $link="")
Rel(Supabase.PostgREST, Supabase.Postgres, "", $techn="", $tags="", $link="")
Rel(Supabase.Realtime, Supabase.Postgres, "", $techn="", $tags="", $link="")
Rel(Supabase.StorageAPI, Supabase.Postgres, "", $techn="", $tags="", $link="")
Rel(Supabase.PostgresMeta, Supabase.Postgres, "", $techn="", $tags="", $link="")
Rel(Supabase.StorageAPI, S3StorageProvider, "", $techn="", $tags="", $link="")
Rel(Supabase.StorageAPI, Supabase.GoTrue, "", $techn="", $tags="", $link="")

SHOW_LEGEND(true)
@enduml