// Generated by ts-to-zod
import { z } from "zod";
import { Json } from "./database.types";

export const jsonSchema: z.ZodSchema<Json> = z.lazy(() =>
  z
    .union([
      z.string(),
      z.number(),
      z.boolean(),
      z.record(z.union([jsonSchema, z.undefined()])),
      z.array(jsonSchema),
    ])
    .nullable(),
);

export const categoryTypeSchema = z.union([
  z.literal("property"),
  z.literal("room"),
  z.literal("roommate"),
]);

export const amenitiesInsertSchema = z.object({
  category: categoryTypeSchema,
  created_at: z.string().optional().nullable(),
  icon_svg: z.string().optional().nullable(),
  id: z.number().optional(),
  name: z.string(),
});

export const amenitiesUpdateSchema = z.object({
  category: categoryTypeSchema.optional(),
  created_at: z.string().optional().nullable(),
  icon_svg: z.string().optional().nullable(),
  id: z.number().optional(),
  name: z.string().optional(),
});

export const higherEducationSpecialtiesRowSchema = z.object({
  area: z.string(),
  code: z.string(),
  id: z.number(),
  qualification: z.string(),
});

export const higherEducationSpecialtiesInsertSchema = z.object({
  area: z.string(),
  code: z.string(),
  id: z.number().optional(),
  qualification: z.string(),
});

export const higherEducationSpecialtiesUpdateSchema = z.object({
  area: z.string().optional(),
  code: z.string().optional(),
  id: z.number().optional(),
  qualification: z.string().optional(),
});

export const interestAreasRowSchema = z.object({
  created_at: z.string().nullable(),
  icon_svg: z.string().nullable(),
  id: z.number(),
  name: z.string(),
});

export const interestAreasInsertSchema = z.object({
  created_at: z.string().optional().nullable(),
  icon_svg: z.string().optional().nullable(),
  id: z.number().optional(),
  name: z.string(),
});

export const interestAreasUpdateSchema = z.object({
  created_at: z.string().optional().nullable(),
  icon_svg: z.string().optional().nullable(),
  id: z.number().optional(),
  name: z.string().optional(),
});

export const preferencesRowSchema = z.object({
  category: categoryTypeSchema,
  created_at: z.string().nullable(),
  id: z.number(),
  name: z.string(),
  options: z.array(z.string()).nullable(),
});

export const preferencesInsertSchema = z.object({
  category: categoryTypeSchema,
  created_at: z.string().optional().nullable(),
  id: z.number().optional(),
  name: z.string(),
  options: z.array(z.string()).optional().nullable(),
});

export const preferencesUpdateSchema = z.object({
  category: categoryTypeSchema.optional(),
  created_at: z.string().optional().nullable(),
  id: z.number().optional(),
  name: z.string().optional(),
  options: z.array(z.string()).optional().nullable(),
});

export const profileSocialsRowSchema = z.object({
  id: z.number(),
  profile_id: z.string(),
  telegram: z.string().nullable(),
  vk: z.string().nullable(),
});

export const profileSocialsInsertSchema = z.object({
  id: z.number().optional(),
  profile_id: z.string(),
  telegram: z.string().optional().nullable(),
  vk: z.string().optional().nullable(),
});

export const profileSocialsUpdateSchema = z.object({
  id: z.number().optional(),
  profile_id: z.string().optional(),
  telegram: z.string().optional().nullable(),
  vk: z.string().optional().nullable(),
});

export const profileUniversitiesRowSchema = z.object({
  created_at: z.string().nullable(),
  geo_lat: z.number().nullable(),
  geo_lon: z.number().nullable(),
  graduation_year: z.number(),
  id: z.number(),
  profile_id: z.string(),
  specialty_id: z.number().nullable(),
  university_address: z.string(),
  university_name: z.string(),
});

export const profileUniversitiesInsertSchema = z.object({
  created_at: z.string().optional().nullable(),
  geo_lat: z.number().optional().nullable(),
  geo_lon: z.number().optional().nullable(),
  graduation_year: z.number(),
  id: z.number().optional(),
  profile_id: z.string(),
  specialty_id: z.number().optional().nullable(),
  university_address: z.string(),
  university_name: z.string(),
});

export const profileUniversitiesUpdateSchema = z.object({
  created_at: z.string().optional().nullable(),
  geo_lat: z.number().optional().nullable(),
  geo_lon: z.number().optional().nullable(),
  graduation_year: z.number().optional(),
  id: z.number().optional(),
  profile_id: z.string().optional(),
  specialty_id: z.number().optional().nullable(),
  university_address: z.string().optional(),
  university_name: z.string().optional(),
});

export const genderSchema = z.union([
  z.literal("male"),
  z.literal("female"),
  z.literal("unknown"),
]);

export const profilesInsertSchema = z.object({
  avatar: z.string().optional().nullable(),
  bio: z.string().optional().nullable(),
  created_at: z.string().optional().nullable(),
  dob: z.string(),
  full_name: z.string(),
  gender: genderSchema,
  id: z.string(),
  interest_areas: z.array(z.string()).optional().nullable(),
});

export const profilesUpdateSchema = z.object({
  avatar: z.string().optional().nullable(),
  bio: z.string().optional().nullable(),
  created_at: z.string().optional().nullable(),
  dob: z.string().optional(),
  full_name: z.string().optional(),
  gender: genderSchema.optional(),
  id: z.string().optional(),
  interest_areas: z.array(z.string()).optional().nullable(),
});

export const advertisingAsSchema = z.union([
  z.literal("tenant"),
  z.literal("owner"),
  z.literal("live_in_landlord"),
]);

export const propertyTypeSchema = z.union([
  z.literal("apartment"),
  z.literal("house"),
  z.literal("townhouse"),
  z.literal("loft"),
  z.literal("studio"),
]);

export const adStatusSchema = z.union([
  z.literal("active"),
  z.literal("inactive"),
  z.literal("paused"),
]);

export const stayDurationSchema = z.union([
  z.literal("semester"),
  z.literal("two_semester"),
  z.literal("flexible"),
]);

export const propertiesInsertSchema = z.object({
  address: z.string(),
  address_data: jsonSchema.optional().nullable(),
  advertising_as: advertisingAsSchema,
  bathrooms_number: z.number(),
  bills_included: z.boolean().optional(),
  created_at: z.string().optional().nullable(),
  deposit_amount: z.number().optional().nullable(),
  description: z.string().optional().nullable(),
  geo_lat: z.number().optional().nullable(),
  geo_lon: z.number().optional().nullable(),
  id: z.number().optional(),
  images: z.array(z.string()).optional().nullable(),
  nearest_metro_station: jsonSchema.optional().nullable(),
  profile_id: z.string(),
  property_type: propertyTypeSchema,
  rent_price_month: z.number(),
  status: adStatusSchema.optional(),
  stay_duration: stayDurationSchema,
  title: z.string(),
});

export const propertiesUpdateSchema = z.object({
  address: z.string().optional(),
  address_data: jsonSchema.optional().nullable(),
  advertising_as: advertisingAsSchema.optional(),
  bathrooms_number: z.number().optional(),
  bills_included: z.boolean().optional(),
  created_at: z.string().optional().nullable(),
  deposit_amount: z.number().optional().nullable(),
  description: z.string().optional().nullable(),
  geo_lat: z.number().optional().nullable(),
  geo_lon: z.number().optional().nullable(),
  id: z.number().optional(),
  images: z.array(z.string()).optional().nullable(),
  nearest_metro_station: jsonSchema.optional().nullable(),
  profile_id: z.string().optional(),
  property_type: propertyTypeSchema.optional(),
  rent_price_month: z.number().optional(),
  status: adStatusSchema.optional(),
  stay_duration: stayDurationSchema.optional(),
  title: z.string().optional(),
});

export const propertyAmenitiesRowSchema = z.object({
  amenity_id: z.number(),
  created_at: z.string().nullable(),
  id: z.number(),
  property_id: z.number(),
  value: z.boolean(),
});

export const propertyAmenitiesInsertSchema = z.object({
  amenity_id: z.number(),
  created_at: z.string().optional().nullable(),
  id: z.number().optional(),
  property_id: z.number(),
  value: z.boolean().optional(),
});

export const propertyAmenitiesUpdateSchema = z.object({
  amenity_id: z.number().optional(),
  created_at: z.string().optional().nullable(),
  id: z.number().optional(),
  property_id: z.number().optional(),
  value: z.boolean().optional(),
});

export const propertyInPreferencesRowSchema = z.object({
  created_at: z.string().nullable(),
  id: z.number(),
  preference_id: z.number(),
  property_id: z.number(),
  value: z.string(),
});

export const propertyInPreferencesInsertSchema = z.object({
  created_at: z.string().optional().nullable(),
  id: z.number().optional(),
  preference_id: z.number(),
  property_id: z.number(),
  value: z.string(),
});

export const propertyInPreferencesUpdateSchema = z.object({
  created_at: z.string().optional().nullable(),
  id: z.number().optional(),
  preference_id: z.number().optional(),
  property_id: z.number().optional(),
  value: z.string().optional(),
});

export const recommendationsRowSchema = z.object({
  created_at: z.string().nullable(),
  id: z.number(),
  property_id: z.number(),
  roommate_id: z.number(),
  score: z.number(),
  updated_at: z.string(),
});

export const recommendationsInsertSchema = z.object({
  created_at: z.string().optional().nullable(),
  id: z.number().optional(),
  property_id: z.number(),
  roommate_id: z.number(),
  score: z.number(),
  updated_at: z.string().optional(),
});

export const recommendationsUpdateSchema = z.object({
  created_at: z.string().optional().nullable(),
  id: z.number().optional(),
  property_id: z.number().optional(),
  roommate_id: z.number().optional(),
  score: z.number().optional(),
  updated_at: z.string().optional(),
});

export const roomAmenitiesRowSchema = z.object({
  amenity_id: z.number(),
  created_at: z.string().nullable(),
  id: z.number(),
  room_id: z.number(),
  value: z.boolean(),
});

export const roomAmenitiesInsertSchema = z.object({
  amenity_id: z.number(),
  created_at: z.string().optional().nullable(),
  id: z.number().optional(),
  room_id: z.number(),
  value: z.boolean().optional(),
});

export const roomAmenitiesUpdateSchema = z.object({
  amenity_id: z.number().optional(),
  created_at: z.string().optional().nullable(),
  id: z.number().optional(),
  room_id: z.number().optional(),
  value: z.boolean().optional(),
});

export const roomTenantsRowSchema = z.object({
  age: z.number(),
  avatar: z.string().nullable(),
  bio: z.string().nullable(),
  created_at: z.string().nullable(),
  full_name: z.string(),
  gender: genderSchema,
  id: z.number(),
  room_id: z.number(),
});

export const roomTenantsInsertSchema = z.object({
  age: z.number(),
  avatar: z.string().optional().nullable(),
  bio: z.string().optional().nullable(),
  created_at: z.string().optional().nullable(),
  full_name: z.string(),
  gender: genderSchema,
  id: z.number().optional(),
  room_id: z.number(),
});

export const roomTenantsUpdateSchema = z.object({
  age: z.number().optional(),
  avatar: z.string().optional().nullable(),
  bio: z.string().optional().nullable(),
  created_at: z.string().optional().nullable(),
  full_name: z.string().optional(),
  gender: genderSchema.optional(),
  id: z.number().optional(),
  room_id: z.number().optional(),
});

export const roommateInPreferencesRowSchema = z.object({
  created_at: z.string().nullable(),
  id: z.number(),
  preference_id: z.number(),
  roommate_id: z.number(),
  value: z.string(),
});

export const roommateInPreferencesInsertSchema = z.object({
  created_at: z.string().optional().nullable(),
  id: z.number().optional(),
  preference_id: z.number(),
  roommate_id: z.number(),
  value: z.string(),
});

export const roommateInPreferencesUpdateSchema = z.object({
  created_at: z.string().optional().nullable(),
  id: z.number().optional(),
  preference_id: z.number().optional(),
  roommate_id: z.number().optional(),
  value: z.string().optional(),
});

export const roommatesRowSchema = z.object({
  address: z.string(),
  address_data: jsonSchema.nullable(),
  budget_month: z.number(),
  created_at: z.string().nullable(),
  description: z.string().nullable(),
  geo_lat: z.number().nullable(),
  geo_lon: z.number().nullable(),
  id: z.number(),
  move_in_date: z.string(),
  profile_id: z.string(),
  rooms_number: z.array(z.number()).nullable(),
  status: adStatusSchema,
  tenants_age: z.array(z.number()).nullable(),
  tenants_number: z.array(z.number()).nullable(),
  title: z.string(),
});

export const roommatesInsertSchema = z.object({
  address: z.string(),
  address_data: jsonSchema.optional().nullable(),
  budget_month: z.number(),
  created_at: z.string().optional().nullable(),
  description: z.string().optional().nullable(),
  geo_lat: z.number().optional().nullable(),
  geo_lon: z.number().optional().nullable(),
  id: z.number().optional(),
  move_in_date: z.string(),
  profile_id: z.string(),
  rooms_number: z.array(z.number()).optional().nullable(),
  status: adStatusSchema.optional(),
  tenants_age: z.array(z.number()).optional().nullable(),
  tenants_number: z.array(z.number()).optional().nullable(),
  title: z.string(),
});

export const roommatesUpdateSchema = z.object({
  address: z.string().optional(),
  address_data: jsonSchema.optional().nullable(),
  budget_month: z.number().optional(),
  created_at: z.string().optional().nullable(),
  description: z.string().optional().nullable(),
  geo_lat: z.number().optional().nullable(),
  geo_lon: z.number().optional().nullable(),
  id: z.number().optional(),
  move_in_date: z.string().optional(),
  profile_id: z.string().optional(),
  rooms_number: z.array(z.number()).optional().nullable(),
  status: adStatusSchema.optional(),
  tenants_age: z.array(z.number()).optional().nullable(),
  tenants_number: z.array(z.number()).optional().nullable(),
  title: z.string().optional(),
});

export const roomSizeSchema = z.union([
  z.literal("small"),
  z.literal("medium"),
  z.literal("large"),
]);

export const roomTypeSchema = z.union([
  z.literal("private"),
  z.literal("shared"),
]);

export const roomsInsertSchema = z.object({
  available_from: z.string().optional().nullable(),
  created_at: z.string().optional().nullable(),
  description: z.string().optional().nullable(),
  id: z.number().optional(),
  images: z.array(z.string()).optional().nullable(),
  property_id: z.number(),
  room_size: roomSizeSchema.optional().nullable(),
  room_type: roomTypeSchema,
  status: adStatusSchema.optional(),
  title: z.string(),
});

export const roomsUpdateSchema = z.object({
  available_from: z.string().optional().nullable(),
  created_at: z.string().optional().nullable(),
  description: z.string().optional().nullable(),
  id: z.number().optional(),
  images: z.array(z.string()).optional().nullable(),
  property_id: z.number().optional(),
  room_size: roomSizeSchema.optional().nullable(),
  room_type: roomTypeSchema.optional(),
  status: adStatusSchema.optional(),
  title: z.string().optional(),
});

export const propertyRecommendationsViewRowSchema = z.object({
  property_id: z.number().nullable(),
  recommendations: jsonSchema.nullable(),
});

export const propertyRoomTenantSummaryRowSchema = z.object({
  available_from_max: z.string().nullable(),
  available_from_min: z.string().nullable(),
  gender_female_count: z.number().nullable(),
  gender_male_count: z.number().nullable(),
  profile_id: z.string().nullable(),
  property_id: z.number().nullable(),
  rent_per_tenant: z.number().nullable(),
  rooms_number: z.number().nullable(),
  tenants_age_avg: z.number().nullable(),
  tenants_age_max: z.number().nullable(),
  tenants_age_min: z.number().nullable(),
  tenants_number: z.number().nullable(),
});

export const roommateRecommendationsViewRowSchema = z.object({
  recommendations: jsonSchema.nullable(),
  roommate_id: z.number().nullable(),
});

export const universitiesRowSchema = z.object({
  geo_lat: z.number().nullable(),
  geo_lon: z.number().nullable(),
  university_address: z.string().nullable(),
  university_name: z.string().nullable(),
});

export const shareWithSchema = z.union([
  z.literal("male"),
  z.literal("female"),
  z.literal("no_one"),
  z.literal("anyone"),
]);

export const amenitiesRowSchema = z.object({
  category: categoryTypeSchema,
  created_at: z.string().nullable(),
  icon_svg: z.string().nullable(),
  id: z.number(),
  name: z.string(),
});

export const profilesRowSchema = z.object({
  avatar: z.string().nullable(),
  bio: z.string().nullable(),
  created_at: z.string().nullable(),
  dob: z.string(),
  full_name: z.string(),
  gender: genderSchema,
  id: z.string(),
  interest_areas: z.array(z.string()).nullable(),
});

export const propertiesRowSchema = z.object({
  address: z.string(),
  address_data: jsonSchema.nullable(),
  advertising_as: advertisingAsSchema,
  bathrooms_number: z.number(),
  bills_included: z.boolean(),
  created_at: z.string().nullable(),
  deposit_amount: z.number().nullable(),
  description: z.string().nullable(),
  geo_lat: z.number().nullable(),
  geo_lon: z.number().nullable(),
  id: z.number(),
  images: z.array(z.string()).nullable(),
  nearest_metro_station: jsonSchema.nullable(),
  profile_id: z.string(),
  property_type: propertyTypeSchema,
  rent_price_month: z.number(),
  status: adStatusSchema,
  stay_duration: stayDurationSchema,
  title: z.string(),
});

export const roomsRowSchema = z.object({
  available_from: z.string().nullable(),
  created_at: z.string().nullable(),
  description: z.string().nullable(),
  id: z.number(),
  images: z.array(z.string()).nullable(),
  property_id: z.number(),
  room_size: roomSizeSchema.nullable(),
  room_type: roomTypeSchema,
  status: adStatusSchema,
  title: z.string(),
});
